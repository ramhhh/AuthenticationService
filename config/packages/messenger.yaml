framework:
    messenger:
        default_bus: command.bus

        failure_transport: failed

        buses:
            command.bus: ~

            event.bus:
                default_middleware: allow_no_handlers

            query.bus: ~

        transports:
            authentication:
                dsn: '%env(MESSENGER_TRANSPORT_DSN)%'
                serializer: App\Messenger\Serializer\AuthenticationMessageSerializer
                options:
                    # Messenger will create then send to this exchange
                    exchange:
                        name: authentication
                        type: direct
                        default_publish_routing_key: authentication
                    # Messenger will create this queue & add binding keys
                    # The worker will know to consume from this queue
                    queues:
                        authentication:
                            binding_keys: [ authentication ]
            api:
                dsn: '%env(MESSENGER_TRANSPORT_DSN)%'
                serializer: App\Messenger\Serializer\APIMessageSerializer
                options:
                    # Messenger will create then send to this exchange
                    exchange:
                        name: api
                        type: direct
                        default_publish_routing_key: api
                    # Messenger will create this queue & add binding keys
                    # The worker will know to consume from this queue
                    queues:
                        api:
                            binding_keys: [ api ]

            failed: 'doctrine://default?queue_name=failed'

        routing:
            'App\Messenger\MessageResponse': api
            'App\Messenger\MessageRequest': authentication